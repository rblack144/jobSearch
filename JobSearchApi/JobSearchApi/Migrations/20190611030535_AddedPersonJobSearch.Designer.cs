// <auto-generated />
using System;
using JobSearchApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JobSearchApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190611030535_AddedPersonJobSearch")]
    partial class AddedPersonJobSearch
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JobSearchApi.Entities.JobType", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("JobTypes");

                    b.HasData(
                        new { Id = (short)1, Description = "Full Time" },
                        new { Id = (short)2, Description = "Part Time" },
                        new { Id = (short)3, Description = "Contract" }
                    );
                });

            modelBuilder.Entity("JobSearchApi.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("JobSearchApi.Entities.PersonJobSearch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobLocation");

                    b.Property<string>("JobTitle");

                    b.Property<string>("JobTypeId");

                    b.Property<short?>("JobTypeId1");

                    b.Property<int>("PersonId");

                    b.Property<DateTime>("PostedDate");

                    b.HasKey("Id");

                    b.HasIndex("JobTypeId1");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonJobSearches");
                });

            modelBuilder.Entity("JobSearchApi.Entities.PersonProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("PersonProfiles");
                });

            modelBuilder.Entity("JobSearchApi.Entities.PersonJobSearch", b =>
                {
                    b.HasOne("JobSearchApi.Entities.JobType", "JobType")
                        .WithMany()
                        .HasForeignKey("JobTypeId1");

                    b.HasOne("JobSearchApi.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JobSearchApi.Entities.PersonProfile", b =>
                {
                    b.HasOne("JobSearchApi.Entities.Person")
                        .WithOne("Profile")
                        .HasForeignKey("JobSearchApi.Entities.PersonProfile", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
